<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.mywork</groupId>
    <artifactId>parentcould</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>common_service</artifactId>
  <name>common_service</name>
  <packaging>jar</packaging>
  <properties>
	   <!--properties节点中设置docker镜像的前缀“springboot”-->  
		<spring-cloud.version>Greenwich.SR1</spring-cloud.version>
		<docker.image.prefix>springio</docker.image.prefix>
		<image.name>common_service:0.0.1</image.name>
   </properties>
   
   
  <dependencies>
  		
  		<!-- 项目公共依赖 -->
		 <dependency>
			<groupId>com.mywork</groupId>
			<artifactId>common_model</artifactId>
		</dependency> 
		 <dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>2.1.4.RELEASE</version>
		</dependency>
  
	<!-- 	<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-feign</artifactId>
		    <version>1.4.7.RELEASE</version>
		</dependency> -->
				
		
<!-- 
		<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-client</artifactId>
        </dependency>
        
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bus-amqp</artifactId>
		</dependency>
		  -->
		<!-- 
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>  -->
   
      
	 
        
        <dependency>
	      	<groupId>com.auth0</groupId>
		    <artifactId>java-jwt</artifactId>
		    <version>3.4.0</version>
		</dependency>
				
		<dependency> 
			<groupId> org.springframework.boot </groupId> 
			<artifactId> spring-boot-devtools </artifactId> 
			<optional>true</optional> 
		</dependency> 
		
		<dependency>
              <groupId>com.google.guava</groupId>
              <artifactId>guava</artifactId>
              <version>24.1-jre</version>
        </dependency>
        

		<!--   MyBatis 通用 Mapper -->
		 <dependency>
			  <groupId>tk.mybatis</groupId>
			  <artifactId>mapper-spring-boot-starter</artifactId>
			  <version>1.1.4</version>
		 </dependency>

		
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
			<version>1.2.5</version>
		</dependency>
		
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>1.1.9</version>
		</dependency>
				
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>	
    		<version>8.0.16</version> 
		</dependency>
	
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.1.11</version>
		</dependency> 

		
  </dependencies>
<!-- 
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement> -->

 	<build>
 		<plugins>
 			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>	
			</plugin>	
			
			
			<!-- 下面的plugin配置是给mybatis自动生成代码用的，可以直接在eclipse里面直接生成代码，
			或者使用mybatis-generator工具的命令行也可以生成，具体使用方法请百度一下 -->
			<plugin>  
                <groupId>org.mybatis.generator</groupId>  
                <artifactId>mybatis-generator-maven-plugin</artifactId>  
                <version>1.3.5</version>  
                <dependencies>   
                
                    <dependency>  
                        <groupId>org.mybatis.generator</groupId>  
                        <artifactId>mybatis-generator-core</artifactId>  
                        <version>1.3.5</version>  
                    </dependency>  
                    
                    <dependency>
				      <groupId>tk.mybatis</groupId>
				      <artifactId>mapper</artifactId>
				      <version>3.4.3</version>
				     </dependency>
                </dependencies>  
                <executions>  
                    <execution>  
                        <id>Generate MyBatis Artifacts</id>  
                        <phase>package</phase>  
                        <goals>  
                            <goal>generate</goal>  
                        </goals>  
                    </execution>  
                </executions>  
                <configuration>  
                    <!--允许移动生成的文件 -->  
                    <verbose>true</verbose>  
                    <!-- 是否覆盖 -->  
                    <overwrite>true</overwrite>  
                    <!-- 自动生成的配置 -->  
                    <!-- 多数据源需要配置多个，方便生成代码的时候使用，该配置文件一个数据源一个，切换配置文件就可以生成对应的数据源的代码了 -->
                    <configurationFile>  
                    	src/main/resources/mybatis-generator/generatorConfig-demo.xml
                    </configurationFile> 
                </configuration>  
            </plugin>  
				
 		</plugins>
 	</build>
 
</project>
